not_1 = (~basis0)
and_ = (basis1 & not_1)
or_ = (basis6 | basis7)
or_1 = (basis4 | basis5)
or_2 = (or_1 | or_)
and_2 = (basis6 & basis7)
or_3 = (basis5 | and_2)
and_3 = (basis4 & or_3)
not_2 = (~and_3)
sel = (basis3 ? not_2 : or_2)
CC__41_5a_61_7a = (sel & and_)
not_10 = (~or_)
and_11 = (basis4 & basis5)
and_12 = (basis2 & basis3)
or_9 = (basis0 | basis1)
not_11 = (~or_9)
and_13 = (and_11 & not_10)
and_14 = (and_12 & not_11)
CC__3c = (and_14 & and_13)
not_12 = (~basis7)
and_16 = (basis6 & not_12)
and_19 = (and_11 & and_16)
CC__3e = (and_14 & and_19)
l_0 = pablo.Advance(CC__3c, 1)
not_c_0 = (~CC__41_5a_61_7a)
e_0 = (l_0 & not_c_0)
test = e_0
accum = e_0
while test:
  accum = test
  m1 = (test & CC__41_5a_61_7a)
  adv = pablo.Advance(m1, 1)
  test = adv
not_c_1 = (~CC__3e)
e_1 = (accum & not_c_1)
output.matches = e_1
